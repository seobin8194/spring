스프링 MVC 흐름
프로젝트 생성시 작성한 패키지명 (com.spring.web)
                                             ------------ -----
                                             그룹id       artifactId : 이 아이디로 context root가 등록 (servers탭에서 server.xml의 127라인에서 확인가능)
-> uri는 http://localhost:8181/web 으로 시작

1. 사용자가 요청하면 dispatcherServlet이 가장 먼저 요청을 받는다
- web-inf/web.xml (서버 설정관련 파일)
  이 파일에서 dispatcherServlet을 서버가 가동되고 요청이 들어왔을때 첫번째로 생성되는 객체로 지정
  또한 /로 시작하는 모든 요청을 받는것으로 설정
- WEB-INF/spring/appServlet/servlet-context.xml (dispatcherServlet 설정 파일)
  빈 자동 생성 -> com.spring.web으로 경로가 시작되고 @Controller로 지정된 클래스를 찾아서 스프링 컨테이너에 등록
2. dispathcerServlet이 handlerMapping에게 controller객체 검색 요청
3. HandlerMapping객체가 스프링 컨테이너에서 controller객체를 검색하고 dispatcherServlet에게 보고
4. dispatcherServlet은 handlerAdapter에게 HandlerMapping이 찾은 controller에서 사용자 요청에 부합하는 메소드 검색을 요청
5. handlerAdapter가 다시 controller로 와서 사용자 요청에 부합하는 메소드를 찾고 실행
- HomeController.java
  handlerAdapter는 @RequestMapping(value = "/", method = RequestMethod.GET)를 보고 요청 uri와 부합하는 메소드를 찾고 실행
6. 메소드실행 후 controller객체는 handlerAdapter객체에게 view문자열을 반환하고 handlerAdapter는 dispatcher에게 반환한다
- HomeController.java
  view문자열을 반환할때 ModelAndView 객체도 함께 반환한다
  ModelAndView객체는 사용자 응답에 필요한 데이터 정보와 뷰정보(jsp파일)가 들어 있다		
7. dispatcherServlet은 반환받은 view문자열을 viewResolver에게 전달한다
8. viewResolver가 넘겨받은 view문자열을 조립하고 dispatcherServlet에게 전달한다
- WEB-INF/spring/appServlet/servlet-context.xml
  넘겨받은 view문자열과 prefix suffix를 조립한다
8. dispatcherServlet은 조립된 view문자열(jsp 파일)을 찾고 이때 ModelAndView객체도 함께 전달한다
