1. 페이지 번호를 넘기면서 /list 요청을 한다
2. 컨트롤러에서 한 페이지 분량의 게시물을 얻어 오고 페이징에 관한 객체를 만든다
- 한 페이지 분량의 게시물
서비스에게 pageVO(페이지 번호, 한 페이지당 표시할 게시물의 개수)를 넘기면서 요청한다
-> 페이지 번호는 /list요청시 넘겨받고 페이지 당 게시물 개수는 pageVO객체 생성시 초기화된다
xml을 실행한다
	         select * from
			(
			select rownum as rn, tbl.* from
				(
				select * from mvc_board 
				order by board_no desc
				) tbl
			)
		where rn > (#{page}-1) * #{countPerPage} and rn <= (#{page} * #{countPerPage})
-> 내림차순으로 전체 조회한 결과에서 rownum을 매기고 또 그 결과에서 한 페이지 분량의 게시글 목록을 얻는다

- 페이징에 관한 객체를 만든다
페이징에 관한 알고리즘을 계산하기 위해서는 현재 페이지, 한 화면에 보여질 페이지 버튼 개수, 게시글 총 개수 가 SET되어야한다
-> 현재 페이지는 사용자가 넘긴 값으로 SET, 한 화면에 보여질 페이지 버튼 수는 상수로 고정, 
    따라서 게시글의 총 개수를 서비스에게 요청하여 얻어와 SET할때 모든 페이징 알고리즘을 계산할 수 있다
3. 컨트롤러에서 한 페이지분량의 게시글과 페이징에 관한 변수들을 JSP로 넘겨 JSP에서 페이징 처리한다

* 페이지 버튼 글 상세보기 후 다시 목록으로, 수정 페이지 방문 후 목록으로 등등 목록요청을 할때 
항상 페이지, 한 페이지에 표시할 글 개수(pageVO)를 요청흐름을 따르면서 넘기고 넘겨 항상 유지한다
그래야 어떤 작업 후 다시 목록 페이지왔을때 이전에 보던 페이지를 이전에 보던 개수로 확인할 수 있다